>>> add_integer = __import__('0-add_integer').add_integer
>>> print(add_integer(1, 2))
3
>>> print(add_integer(100, -2))
98
>>> print(add_integer(2))
100
>>> print(add_integer(100.3, -2))
98
>>> print(add_integer(4, "School"))
Traceback (most recent call last):
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 20, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 27, in add_integer
    raise TypeError(error)
TypeError: b must be an integer
>>> print(add_integer(5.5, 10.2))
15
>>> print(add_integer('5', 10))
Traceback (most recent call last):
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 27, in add_integer
    raise TypeError(error)
TypeError: a must be an integer
>>> print(add_integer(1e100, 2.5))
10000000000000000159028911097599180468360808563945281389781327557747838772170381060813469985856815106
>>> print(add_integer({'a': 1, 'b': 2}))
Traceback (most recent call last):
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 27, in add_integer
    raise TypeError(error)
TypeError: a must be an integer
>>> print(add_integer(None))
Traceback (most recent call last):
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 27, in add_integer
    raise TypeError(error)
TypeError: a must be an integer
>>> print(add_integer(None))
Traceback (most recent call last):
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 18, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 27, in add_integer
    raise TypeError(error)
TypeError: a must be an integer
>>> print(add_integer(float('nan'), 10))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 21, in add_integer
    a = int(a) if isinstance(a, float) else a
ValueError: cannot convert float NaN to integer
>>> print(add_integer(10, float('nan')))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 23, in add_integer
    b = int(b) if isinstance(b, float) else b
ValueError: cannot convert float NaN to integer
>>> print(add_integer(float('nan'), float('nan')))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 21, in add_integer
    a = int(a) if isinstance(a, float) else a
ValueError: cannot convert float NaN to integer
